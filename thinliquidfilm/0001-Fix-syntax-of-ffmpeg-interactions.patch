From 31c56ae328732199af0947ab480801a3956c7886 Mon Sep 17 00:00:00 2001
From: Gergely Imreh <imrehg@gmail.com>
Date: Wed, 7 Jan 2009 13:42:18 +0800
Subject: [PATCH 1/2] Fix: syntax of ffmpeg interactions

ffmpeg syntax was wrong a number of times. Examples are refering
to codecs (aac->libfaac, h264->libx264), and bitrates (e.g 128->128k)
This has been corrected to enable at least video parameter check (on
select) and encoding.
---
 getFileInfo.py    |    2 +-
 main.py           |   13 ++++++++-----
 thinliquidfilm.py |   12 ++++++------
 3 files changed, 15 insertions(+), 12 deletions(-)

diff --git a/getFileInfo.py b/getFileInfo.py
index 89edf34..6456c19 100644
--- a/getFileInfo.py
+++ b/getFileInfo.py
@@ -3,7 +3,7 @@ import re
 
 def getInfo(file):
     try:
-        cmd = ('ffmpeg -i "%s" -vframes 10 -vcodec mpeg4 -r 29.970030 -b 768 -ar 24000 -ab 128 -s 320x192 /dev/null' %(file))
+        cmd = ('ffmpeg -i "%s" -vframes 10 -vcodec mpeg4 -r 29.970030 -b 768k -ar 24000 -ab 128k -s 320x180 -f avi - > /dev/null' %(file))
         output = commands.getoutput(cmd)
         print output
         regexp = r'''(?isx)
diff --git a/main.py b/main.py
index be6499a..6bfed9c 100644
--- a/main.py
+++ b/main.py
@@ -2689,22 +2689,25 @@ class main(QDialog):
             infile = infile_raw[-1]
             self.prog_dialog.setLabelText('Encoding ' + infile + '...')
             if self.encodeSettings[i][2] == 1:
-                maxrate = '1500'
-                bitrate = '1100'
+                maxrate = '1500k'
+                bitrate = '1100k'
             else:
-                maxrate = '768'
-                bitrate = '600'
+                maxrate = '768k'
+                bitrate = '600k'
             output_raw = self.file_paths[i].split('/')
             output_raw = output_raw[-1].split('.')
             if self.encodeSettings[i][3] == 'xvid':
                 output_raw[-1] = 'mp4'
                 h264_opts = '-maxrate %s -b %s -qmin 3 -qmax 5 -g 300' %(maxrate,bitrate)
+            elif self.encodeSettings[i][3] == 'libx264':
+                output_raw[-1] = 'mp4'
+                h264_opts = '-maxrate %s -flags +loop -cmp +chroma -partitions +parti4x4+partp4x4+partp8x8+partp8x8 -flags2 +mixed_refs -level 13 -refs 3 -subq 7 -trellis 2 -me full -g 300' %(maxrate)
             else:
                 output_raw[-1] = 'mov'
                 h264_opts = '-maxrate %s -flags +loop -cmp +chroma -partitions +parti4x4+partp4x4+partp8x8+partp8x8 -flags2 +mixed_refs -level 13 -refs 3 -subq 7 -trellis 2 -me full -g 300' %(maxrate)
             out_file = '.'.join(output_raw)
             if self.encodeSettings[i][0] == '1':
-                ffmpegPipe = os.popen('ffmpeg -y -i "%s" -vcodec %s %s -acodec aac -ab %s -ar 48000 -ac 2 -s %s "%s" &> %s' %(self.file_paths[i],self.encodeSettings[i][3],h264_opts,self.encodeSettings[i][4],self.encodeSettings[i][1][self.encodeSettings[i][2]],self.encodeSettings[i][5] + '/' + out_file, logfile))
+                ffmpegPipe = os.popen('ffmpeg -y -i "%s" -vcodec %s %s -acodec libfaac -ab %s -ar 48000 -ac 2 -s %s "%s" &> %s' %(self.file_paths[i],self.encodeSettings[i][3],h264_opts,self.encodeSettings[i][4],self.encodeSettings[i][1][self.encodeSettings[i][2]],self.encodeSettings[i][5] + '/' + out_file, logfile))
                 running = 0
                 time.sleep(1)
                 file = open(logfile,'r')
diff --git a/thinliquidfilm.py b/thinliquidfilm.py
index ff82411..8d0a306 100755
--- a/thinliquidfilm.py
+++ b/thinliquidfilm.py
@@ -30,16 +30,16 @@ if __name__ == "__main__":
     else:
         print 'ffmpeg does not support xvid.  thin liquid film will not be able to read or encode xvid video files.'
         codec_errors += 1
-    match = re.findall('h264', output)
+    match = re.findall('libx264', output)
     if len(match) > 0:
-        print 'ffmpeg supports h264'
-        f.comboCodec.insertItem('h264',-1)
+        print 'ffmpeg supports x264'
+        f.comboCodec.insertItem('libx264',-1)
     else:
-        print 'ffmpeg does not support h264.  thin liquid film will not be able to read or encode h264 video files.'
+        print 'ffmpeg does not support x264.  thin liquid film will not be able to read or encode x264 video files.'
         codec_errors += 1
     if codec_errors == 2:
-        print "ffmpeg does not support either xvid or h264.  thin liquid film will not work without one of those codecs being supported by ffmpeg.  thin liquid film will exit."
-        os.system('kdialog --title "FFMPEG dependency failure" --error "ffmpeg does not support either xvid or h264.  thin liquid film will not work without one of those codecs being supported by ffmpeg.  thin liquid film will exit."')
+        print "ffmpeg does not support either xvid or x264.  thin liquid film will not work without one of those codecs being supported by ffmpeg.  thin liquid film will exit."
+        os.system('kdialog --title "FFMPEG dependency failure" --error "ffmpeg does not support either xvid or x264.  thin liquid film will not work without one of those codecs being supported by ffmpeg.  thin liquid film will exit."')
         sys.exit()
     f.home_directory = os.popen("echo $HOME").readline()[0:-1]
     f.config_directory = f.home_directory + '/.thinliquidfilm'
-- 
1.6.1

